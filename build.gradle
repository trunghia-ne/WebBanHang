/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.hidetake.ssh' version '2.10.1'
    id 'war'
}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.jakarta.servlet.jsp.jstl.jakarta.servlet.jsp.jstl.api
    api libs.org.glassfish.web.jakarta.servlet.jsp.jstl
    api libs.com.mysql.mysql.connector.j
    api libs.org.jdbi.jdbi3.core
    api libs.org.apache.cassandra.cassandra.all
    api libs.ch.qos.logback.logback.classic
    api libs.com.google.code.gson.gson
    api libs.org.mindrot.jbcrypt
    api libs.com.sun.mail.javax.mail
    api libs.com.fasterxml.jackson.core.jackson.databind
    api libs.com.google.api.client.google.api.client
    api libs.com.google.oauth.client.google.oauth.client.jetty
    api libs.com.google.apis.google.api.services.oauth2
    api libs.com.google.http.client.google.http.client.jackson2
    api libs.com.google.guava.guava
    api libs.org.json.json
    api libs.com.cloudinary.cloudinary.http44
    api libs.commons.io.commons.io
    testImplementation libs.org.junit.jupiter.junit.jupiter.api
    testImplementation libs.org.junit.jupiter.junit.jupiter.engine
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'jakarta.websocket:jakarta.websocket-api:2.1.1'
    implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.0.0'
    providedCompile 'org.apache.tomcat.embed:tomcat-embed-websocket:10.1.16'
    implementation 'com.google.code.gson:gson:2.10.1'
}

group = 'com.example'
version = '1.0-SNAPSHOT'
description = 'WebBongDen'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


apply plugin: 'org.hidetake.ssh'
remotes {
    host {
        host = '192.168.52.132'
        user = 'root'
        password = 'pvp'
    }
}
ssh.settings {
    knownHosts = allowAnyHosts
}

task docker_app_start {
    doLast {
        println 'begin docker_app_start'
        ssh.run {
            session(remotes.host) {
                execute 'docker stop tomcat', ignoreError: true
                execute 'docker run -it --rm -d ' +
                        '--name tomcat ' +
                        '-v /usr/deploy:/usr/local/tomcat/webapps ' +
                        '-p 80:8080 ' +
                        'tomcat:latest&'
            }
        }
    }
}
task docker_upload_file_to_server {
    doLast {
        println 'begin docker_upload_file_to_server'
        ssh.run {
            session(remotes.host) {
                remove '/usr/deploy/WebBongDen_war.war'
                remove '/usr/deploy/WebBongDen_war/'
                put from: "${project.projectDir}/build/libs/WebBongDen-1.0-SNAPSHOT.war",
                        into: "/usr/deploy/WebBongDen_war.war"
            }
        }
    }
}

task docker_deploy {
    docker_deploy.dependsOn docker_app_start
    docker_deploy.dependsOn docker_upload_file_to_server
    docker_deploy.dependsOn build
    tasks.getByName('docker_app_start').mustRunAfter docker_upload_file_to_server
}